name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      minio:
        image: minio/minio
        ports:
          - 9000:9000
          - 9001:9001
        env:
          MINIO_ROOT_USER: minioadmin
          MINIO_ROOT_PASSWORD: minioadmin
        options: >-
          server /data --console-address ":9001"

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        working-directory: ./argus-backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
          
      - name: Initialize test environment
        working-directory: ./argus-backend
        env:
          MONGODB_URL: mongodb://localhost:27017
          MINIO_ENDPOINT: localhost:9000
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
          MINIO_BUCKET_NAME: argus-samples
          MINIO_SECURE: "false"
        run: |
          python scripts/init_test_env.py
          
      - name: Check MinIO health
        run: |
          for i in {1..30}; do
            if curl -s -f http://localhost:9000/minio/health/live > /dev/null; then
              echo "MinIO is healthy"
              exit 0
            fi
            echo "Waiting for MinIO to be ready..."
            sleep 2
          done
          echo "MinIO health check failed"
          exit 1
          
      - name: Run tests
        working-directory: ./argus-backend
        env:
          MONGODB_URL: mongodb://localhost:27017
          MINIO_ENDPOINT: localhost:9000
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
          MINIO_BUCKET_NAME: argus-samples
          MINIO_SECURE: "false"
        run: |
          pytest
          
      - name: Build backend
        working-directory: ./argus-backend
        run: |
          python setup.py sdist bdist_wheel

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        working-directory: ./argus-vue
        run: npm ci
        
      - name: Run linting
        working-directory: ./argus-vue
        run: npm run lint
        
      - name: Build frontend
        working-directory: ./argus-vue
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ./argus-vue/dist

  deploy:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to production
        run: |
          echo "部署到生产环境"
          # 这里添加您的部署命令
          # 例如：使用 SSH 连接到服务器并执行部署脚本 